{"ast":null,"code":"var _jsxFileName = \"/home/dell/JAGOTA/march-27/Backup-Mar23 safety march27/backup04-04 filter new design try/src/pages/OrderModule/GoogleMapShow/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback, useRef, useState, useEffect } from \"react\";\nimport { GoogleMap, MarkerF, DirectionsRenderer } from \"@react-google-maps/api\";\nimport moment from \"moment\";\nimport \"./map.scss\";\nimport { car } from \"./map.image\";\nimport database from \"../../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent(_ref) {\n  _s();\n  let {\n    delat,\n    delng,\n    truckloc\n  } = _ref;\n  const [latLonSet, setLatLonSet] = useState({});\n  const [origin, setorigin] = useState({\n    lat: parseFloat(delat),\n    lng: parseFloat(delng)\n  });\n  useEffect(() => {\n    locationcallback();\n  }, []);\n  useEffect(async () => {\n    setInterval(() => {\n      locationcallback();\n    }, 30000);\n  }, []);\n  const locationcallback = async () => {\n    // debugger;\n    const mobile = truckloc === null || truckloc === void 0 ? void 0 : truckloc.drivermobile;\n    const routeCode = truckloc === null || truckloc === void 0 ? void 0 : truckloc.routecode;\n    // console.log(mobile, routeCode, \"test\");\n    const date = moment(new Date()).format(\"YYYYMMDD\");\n    const itemRef = `locationTrackingInterval-` + date + mobile + routeCode;\n    // console.log(\"react hook is called\", itemRef);\n    const collectionRef = database.ref(itemRef);\n    collectionRef.limitToLast(1).on(\"child_added\", snapshot => {\n      const data = snapshot.val();\n    });\n    collectionRef.once(\"value\", snapshot => {\n      const data = snapshot.val();\n      let key = Object.values(data).sort().pop();\n      setLatLonSet({\n        lat: key.lat,\n        lng: key.long\n      });\n    });\n  };\n  const markerOption = {\n    path: car,\n    scale: 0.5,\n    strokeColor: \"white\",\n    strokeWeight: 0.1,\n    fillOpacity: 1,\n    // fillColor: \"#57c36f\",\n    fillColor: \"#2b2b2b\",\n    rotation: undefined\n  };\n  const mapRef = useRef();\n  const centerLatLng = useMemo(() => ({\n    lat: origin === null || origin === void 0 ? void 0 : origin.lat,\n    lng: origin === null || origin === void 0 ? void 0 : origin.lng\n  }), [origin]);\n  const carMarker = useMemo(() => ({\n    lat: latLonSet === null || latLonSet === void 0 ? void 0 : latLonSet.lat,\n    lng: latLonSet === null || latLonSet === void 0 ? void 0 : latLonSet.lng\n  }), [latLonSet]);\n  const options = useMemo(() => {\n    return {\n      mapId: \"4641550cf13bc112\",\n      disableDefaultUI: true,\n      clickableIcons: false\n    };\n  }, []);\n  const onLoad = useCallback(map => mapRef.current = map, []);\n\n  // Direction Logic\n  const [directions, setDirections] = useState();\n  const fetchDirections = position => {\n    if (!position) return;\n    const service = new window.google.maps.DirectionsService();\n    service.route({\n      origin: position,\n      destination: centerLatLng,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === \"OK\" && result) {\n        console.log(\"this is direction\");\n        setDirections(result);\n      }\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (carMarker) {\n        fetchDirections(carMarker);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [carMarker]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: 12,\n    center: centerLatLng,\n    mapContainerClassName: \"map-container\",\n    options: options,\n    onLoad: onLoad,\n    children: [directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      directions: directions,\n      options: {\n        suppressMarkers: true,\n        polylineOptions: {\n          zIndex: 50,\n          strokeColor: \"#37bfa7\",\n          strokeWeight: 5\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MarkerF, {\n      icon: markerOption,\n      position: carMarker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkerF, {\n      position: centerLatLng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"XbJzCyDpLzK8Es7RoQXBzD3kLsA=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useMemo","useCallback","useRef","useState","useEffect","GoogleMap","MarkerF","DirectionsRenderer","moment","car","database","jsxDEV","_jsxDEV","MapComponent","_ref","_s","delat","delng","truckloc","latLonSet","setLatLonSet","origin","setorigin","lat","parseFloat","lng","locationcallback","setInterval","mobile","drivermobile","routeCode","routecode","date","Date","format","itemRef","collectionRef","ref","limitToLast","on","snapshot","data","val","once","key","Object","values","sort","pop","long","markerOption","path","scale","strokeColor","strokeWeight","fillOpacity","fillColor","rotation","undefined","mapRef","centerLatLng","carMarker","options","mapId","disableDefaultUI","clickableIcons","onLoad","map","current","directions","setDirections","fetchDirections","position","service","window","google","maps","DirectionsService","route","destination","travelMode","TravelMode","DRIVING","result","status","console","log","interval","clearInterval","zoom","center","mapContainerClassName","children","suppressMarkers","polylineOptions","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/home/dell/JAGOTA/march-27/Backup-Mar23 safety march27/backup04-04 filter new design try/src/pages/OrderModule/GoogleMapShow/MapComponent.js"],"sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\nimport { GoogleMap, MarkerF, DirectionsRenderer } from \"@react-google-maps/api\";\nimport moment from \"moment\";\nimport \"./map.scss\";\nimport { car } from \"./map.image\";\nimport database from \"../../../firebase\";\n\nfunction MapComponent({ delat, delng, truckloc }) {\n  const [latLonSet, setLatLonSet] = useState({});\n  const [origin, setorigin] = useState({\n    lat: parseFloat(delat),\n    lng: parseFloat(delng),\n  });\n\n  useEffect(() => {\n    locationcallback();\n  }, []);\n\n  useEffect(async () => {\n    setInterval(() => {\n      locationcallback();\n    }, 30000);\n  }, []);\n\n\n  const locationcallback = async () => {\n    // debugger;\n    const mobile = truckloc?.drivermobile;\n    const routeCode = truckloc?.routecode;\n    // console.log(mobile, routeCode, \"test\");\n    const date = moment(new Date()).format(\"YYYYMMDD\");\n    const itemRef = `locationTrackingInterval-` + date + mobile + routeCode;\n    // console.log(\"react hook is called\", itemRef);\n    const collectionRef = database.ref(itemRef);\n    collectionRef.limitToLast(1).on(\"child_added\", (snapshot) => {\n      const data = snapshot.val();\n    });\n    collectionRef.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      let key = Object.values(data).sort().pop();\n      setLatLonSet({\n        lat: key.lat,\n        lng: key.long,\n      });\n    });\n  };\n\n\n  const markerOption = {\n    path: car,\n    scale: 0.5,\n    strokeColor: \"white\",\n    strokeWeight: 0.1,\n    fillOpacity: 1,\n    // fillColor: \"#57c36f\",\n    fillColor: \"#2b2b2b\",\n    rotation: undefined,\n  };\n  const mapRef = useRef();\n\n  const centerLatLng = useMemo(\n    () => ({\n      lat: origin?.lat,\n      lng: origin?.lng,\n    }),\n    [origin]\n  );\n\n  const carMarker = useMemo(\n    () => ({ lat: latLonSet?.lat, lng: latLonSet?.lng }),\n    [latLonSet]\n  );\n\n  const options = useMemo(() => {\n    return {\n      mapId: \"4641550cf13bc112\",\n      disableDefaultUI: true,\n      clickableIcons: false,\n    };\n  }, []);\n  const onLoad = useCallback((map) => (mapRef.current = map), []);\n\n  // Direction Logic\n  const [directions, setDirections] = useState();\n  const fetchDirections = (position) => {\n    if (!position) return;\n\n    const service = new window.google.maps.DirectionsService();\n    service.route(\n      {\n        origin: position,\n        destination: centerLatLng,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === \"OK\" && result) {\n          console.log(\"this is direction\");\n          setDirections(result);\n        }\n      }\n    );\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (carMarker) {\n        fetchDirections(carMarker);\n      }\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [carMarker]);\n\n  return (\n    <GoogleMap\n      zoom={12}\n      center={centerLatLng}\n      mapContainerClassName=\"map-container\"\n      options={options}\n      onLoad={onLoad}\n    >\n      {directions && (\n        <DirectionsRenderer\n          directions={directions}\n          options={{\n            suppressMarkers: true,\n            polylineOptions: {\n              zIndex: 50,\n              strokeColor: \"#37bfa7\",\n              strokeWeight: 5,\n            },\n          }}\n        />\n      )}\n      <MarkerF icon={markerOption} position={carMarker}></MarkerF>\n      <MarkerF position={centerLatLng}></MarkerF>\n    </GoogleMap>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}