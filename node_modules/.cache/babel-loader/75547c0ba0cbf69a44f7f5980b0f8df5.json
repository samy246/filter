{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar e = require(\"react/jsx-runtime\"),\n  t = require(\"react\"),\n  o = function () {\n    return o = Object.assign || function (e) {\n      for (var t, o = 1, n = arguments.length; o < n; o++) for (var i in t = arguments[o]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);\n      return e;\n    }, o.apply(this, arguments);\n  };\nfunction n(e, t, o) {\n  if (o || 2 === arguments.length) for (var n, i = 0, r = t.length; i < r; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);\n  return e.concat(n || Array.prototype.slice.call(t));\n}\nfunction i(t) {\n  var n = t.size,\n    i = void 0 === n ? 25 : n,\n    r = t.SVGstrokeColor,\n    l = void 0 === r ? \"currentColor\" : r,\n    a = t.SVGstorkeWidth,\n    s = void 0 === a ? 0 : a,\n    c = t.SVGclassName,\n    d = void 0 === c ? \"star-svg\" : c,\n    u = t.SVGstyle;\n  return e.jsx(\"svg\", o({\n    className: d,\n    style: u,\n    stroke: l,\n    fill: \"currentColor\",\n    strokeWidth: s,\n    viewBox: \"0 0 24 24\",\n    width: i,\n    height: i,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, {\n    children: e.jsx(\"path\", {\n      d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n    })\n  }));\n}\nfunction r(e, t) {\n  switch (t.type) {\n    case \"PointerMove\":\n      return o(o({}, e), {\n        hoverValue: t.payload,\n        hoverIndex: t.index\n      });\n    case \"PointerLeave\":\n      return o(o({}, e), {\n        ratingValue: e.ratingValue,\n        hoverIndex: 0,\n        hoverValue: null\n      });\n    case \"MouseClick\":\n      return o(o({}, e), {\n        valueIndex: e.hoverIndex,\n        ratingValue: t.payload\n      });\n    default:\n      return e;\n  }\n}\nvar l = \"style-module_starRatingWrap__q-lJC\",\n  a = \"style-module_simpleStarRating__nWUxf\",\n  s = \"style-module_fillIcons__6---A\",\n  c = \"style-module_emptyIcons__Bg-FZ\",\n  d = \"style-module_tooltip__tKc3i\";\n!function (e, t) {\n  void 0 === t && (t = {});\n  var o = t.insertAt;\n  if (e && \"undefined\" != typeof document) {\n    var n = document.head || document.getElementsByTagName(\"head\")[0],\n      i = document.createElement(\"style\");\n    i.type = \"text/css\", \"top\" === o && n.firstChild ? n.insertBefore(i, n.firstChild) : n.appendChild(i), i.styleSheet ? i.styleSheet.cssText = e : i.appendChild(document.createTextNode(e));\n  }\n}(\"body,html{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0;padding:0}.style-module_starRatingWrap__q-lJC{display:inline-block;touch-action:none}.style-module_simpleStarRating__nWUxf{display:inline-block;overflow:hidden;position:relative;touch-action:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap}.style-module_fillIcons__6---A{display:inline-block;overflow:hidden;position:absolute;top:0;white-space:nowrap}.style-module_emptyIcons__Bg-FZ{display:inline-block}.style-module_tooltip__tKc3i{background-color:#333;border-radius:5px;color:#fff;display:inline-block;padding:5px 15px;vertical-align:middle}\"), exports.Rating = function (u) {\n  var v,\n    p,\n    h = u.onClick,\n    m = u.onPointerMove,\n    y = u.onPointerEnter,\n    f = u.onPointerLeave,\n    g = u.initialValue,\n    x = void 0 === g ? 0 : g,\n    _ = u.iconsCount,\n    C = void 0 === _ ? 5 : _,\n    S = u.size,\n    V = void 0 === S ? 40 : S,\n    k = u.readonly,\n    w = void 0 !== k && k,\n    b = u.rtl,\n    M = void 0 !== b && b,\n    I = u.customIcons,\n    j = void 0 === I ? [] : I,\n    G = u.allowFraction,\n    N = void 0 !== G && G,\n    A = u.style,\n    P = u.className,\n    L = void 0 === P ? \"react-simple-star-rating\" : P,\n    R = u.transition,\n    W = void 0 !== R && R,\n    B = u.allowHover,\n    E = void 0 === B || B,\n    F = u.disableFillHover,\n    T = void 0 !== F && F,\n    z = u.fillIcon,\n    q = void 0 === z ? null : z,\n    O = u.fillColor,\n    U = void 0 === O ? \"#ffbc0b\" : O,\n    H = u.fillColorArray,\n    J = void 0 === H ? [] : H,\n    K = u.fillStyle,\n    Z = u.fillClassName,\n    D = void 0 === Z ? \"filled-icons\" : Z,\n    X = u.emptyIcon,\n    Y = void 0 === X ? null : X,\n    Q = u.emptyColor,\n    $ = void 0 === Q ? \"#cccccc\" : Q,\n    ee = u.emptyStyle,\n    te = u.emptyClassName,\n    oe = void 0 === te ? \"empty-icons\" : te,\n    ne = u.showTooltip,\n    ie = void 0 !== ne && ne,\n    re = u.tooltipDefaultText,\n    le = void 0 === re ? \"Your Rate\" : re,\n    ae = u.tooltipArray,\n    se = void 0 === ae ? [] : ae,\n    ce = u.tooltipStyle,\n    de = u.tooltipClassName,\n    ue = void 0 === de ? \"react-simple-star-rating-tooltip\" : de,\n    ve = u.SVGclassName,\n    pe = void 0 === ve ? \"star-svg\" : ve,\n    he = u.titleSeparator,\n    me = void 0 === he ? \"out of\" : he,\n    ye = u.SVGstyle,\n    fe = u.SVGstorkeWidth,\n    ge = void 0 === fe ? 0 : fe,\n    xe = u.SVGstrokeColor,\n    _e = void 0 === xe ? \"currentColor\" : xe,\n    Ce = t.useReducer(r, {\n      hoverIndex: 0,\n      valueIndex: 0,\n      ratingValue: 0,\n      hoverValue: null\n    }),\n    Se = Ce[0],\n    Ve = Se.ratingValue,\n    ke = Se.hoverValue,\n    we = Se.hoverIndex,\n    be = Se.valueIndex,\n    Me = Ce[1],\n    Ie = t.useMemo(function () {\n      return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n    }, []),\n    je = t.useMemo(function () {\n      return N ? 2 * C : C;\n    }, [N, C]),\n    Ge = t.useMemo(function () {\n      return x > je ? 0 : N || Math.floor(x) === x ? Math.round(x / C * 100) : 2 * Math.ceil(x) * 10;\n    }, [N, x, C, je]),\n    Ne = t.useMemo(function () {\n      return (N ? 2 * x - 1 : x - 1) || 0;\n    }, [N, x]),\n    Ae = t.useCallback(function (e) {\n      return C % 2 != 0 ? e / 2 / 10 : e / C;\n    }, [C]),\n    Pe = function (e) {\n      for (var t = e.clientX, o = e.currentTarget.children[0].getBoundingClientRect(), n = o.left, i = o.right, r = o.width, l = M ? i - t : t - n, a = je, s = Math.round(r / je), c = 0; c <= je; c += 1) if (l <= s * c) {\n        a = 0 === c && l < s ? 0 : c;\n        break;\n      }\n      var d = a - 1;\n      a > 0 && (Me({\n        type: \"PointerMove\",\n        payload: 100 * a / je,\n        index: d\n      }), m && ke && m(Ae(ke), d, e));\n    },\n    Le = function (e) {\n      ke && (Me({\n        type: \"MouseClick\",\n        payload: ke\n      }), h && h(Ae(ke), we, e));\n    },\n    Re = t.useMemo(function () {\n      if (E) {\n        if (T) {\n          var e = Ve && Ve || Ge;\n          return ke && ke > e ? ke : e;\n        }\n        return ke && ke || Ve && Ve || Ge;\n      }\n      return Ve && Ve || Ge;\n    }, [E, T, ke, Ve, Ge]);\n  t.useEffect(function () {\n    se.length > je && console.error(\"tooltipArray Array length is bigger then Icons Count length.\");\n  }, [se.length, je]);\n  var We = t.useCallback(function (e) {\n      return ke && e[we] || Ve && e[be] || x && e[Ne];\n    }, [ke, we, Ve, be, x, Ne]),\n    Be = t.useMemo(function () {\n      return ke && Ae(ke) || Ve && Ae(Ve) || x && Ae(Ge);\n    }, [ke, Ae, Ve, x, Ge]);\n  return e.jsxs(\"span\", o({\n    className: l,\n    style: {\n      direction: \"\".concat(M ? \"rtl\" : \"ltr\")\n    }\n  }, {\n    children: [e.jsxs(\"span\", o({\n      className: \"\".concat(a, \" \").concat(L),\n      style: o({\n        cursor: w ? \"\" : \"pointer\"\n      }, A),\n      onPointerMove: w ? void 0 : Pe,\n      onPointerEnter: w ? void 0 : function (e) {\n        y && y(e), Ie && Pe(e);\n      },\n      onPointerLeave: w ? void 0 : function (e) {\n        Ie && Le(), Me({\n          type: \"PointerLeave\"\n        }), f && f(e);\n      },\n      onClick: w ? void 0 : Le,\n      \"aria-hidden\": \"true\"\n    }, {\n      children: [e.jsx(\"span\", o({\n        className: \"\".concat(c, \" \").concat(oe),\n        style: o({\n          color: $\n        }, ee)\n      }, {\n        children: n([], Array(C), !0).map(function (o, n) {\n          var r;\n          return e.jsx(t.Fragment, {\n            children: (null === (r = j[n]) || void 0 === r ? void 0 : r.icon) || Y || e.jsx(i, {\n              SVGclassName: pe,\n              SVGstyle: ye,\n              SVGstorkeWidth: ge,\n              SVGstrokeColor: _e,\n              size: V\n            })\n          }, n);\n        })\n      })), e.jsx(\"span\", o({\n        className: \"\".concat(s, \" \").concat(D),\n        style: o((v = {}, v[M ? \"right\" : \"left\"] = 0, v.color = We(J) || U, v.transition = W ? \"width .2s ease, color .2s ease\" : \"\", v.width = \"\".concat(Re, \"%\"), v), K),\n        title: \"\".concat(ke && Ae(ke) || Ae(Ge), \" \").concat(me, \" \").concat(C)\n      }, {\n        children: n([], Array(C), !0).map(function (o, n) {\n          var r;\n          return e.jsx(t.Fragment, {\n            children: (null === (r = j[n]) || void 0 === r ? void 0 : r.icon) || q || e.jsx(i, {\n              SVGclassName: pe,\n              SVGstyle: ye,\n              SVGstorkeWidth: ge,\n              SVGstrokeColor: _e,\n              size: V\n            })\n          }, n);\n        })\n      }))]\n    })), ie && e.jsx(\"span\", o({\n      className: \"\".concat(d, \" \").concat(ue),\n      style: o((p = {}, p[M ? \"marginRight\" : \"marginLeft\"] = 20, p), ce)\n    }, {\n      children: (se.length > 0 ? We(se) : Be) || le\n    }))]\n  }));\n};","map":{"version":3,"sources":["../src/components/StarIcon.tsx","../src/reducer.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Rating.tsx"],"names":["StarIcon","_a","_b","_c","_d","_e","SVGstyle","_jsx","className","SVGclassName","style","stroke","SVGstrokeColor","fill","strokeWidth","SVGstorkeWidth","viewBox","width","size","height","xmlns","jsx","state","action","type","hoverValue","payload","hoverIndex","index","ratingValue","valueIndex","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","onClick","onPointerMove","onPointerEnter","onPointerLeave","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","fillStyle","_t","_u","_v","emptyStyle","_w","_x","_y","_z","tooltipStyle","_0","_1","_2","_3","_4","_5","_6","dispatch","useReducer","reducer","isTouchDevice","useMemo","window","navigator","maxTouchPoints","totalIcons","allowFraction","iconsCount","localRating","initialValue","Math","floor","ceil","round","localRatingIndex","renderValue","useCallback","value","handlePointerMove","event","clientX","left","right","children","getBoundingClientRect","positionX","rtl","currentValue","iconWidth","i","handleClick","valuePercentage","allowHover","disableFillHover","useEffect","tooltipArray","length","console","error","ratingArray","array","ratingRenderValues","_jsxs","direction","concat","__assign","readonly","undefined","emptyColor","Array","map","_","Fragment","icon","emptyIcon","fillClassName","color","fillColorArray","fillColor","transition","title","titleSeparator","fillIcon","showTooltip","tooltipClassName","tooltipDefaultText"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nexport interface StarIconProps {\r\n  /** Icon width / height in `px` */\r\n  size?: number\r\n  SVGstrokeColor?: string\r\n  SVGstorkeWidth?: string | number\r\n  SVGclassName?: string\r\n  SVGstyle?: React.CSSProperties\r\n}\r\n\r\nexport function StarIcon({\r\n  size = 25,\r\n  SVGstrokeColor = 'currentColor',\r\n  SVGstorkeWidth = 0,\r\n  SVGclassName = 'star-svg',\r\n  SVGstyle\r\n}: StarIconProps) {\r\n  return (\r\n    <svg\r\n      className={SVGclassName}\r\n      style={SVGstyle}\r\n      stroke={SVGstrokeColor}\r\n      fill='currentColor'\r\n      strokeWidth={SVGstorkeWidth}\r\n      viewBox='0 0 24 24'\r\n      width={size}\r\n      height={size}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path d='M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z'></path>\r\n    </svg>\r\n  )\r\n}\r\n","type State = {\r\n  ratingValue: number | null\r\n  hoverValue: number | null\r\n  hoverIndex: number\r\n  valueIndex: number\r\n}\r\n\r\ntype Action =\r\n  | { type: 'PointerMove'; payload: number | null; index: number }\r\n  | { type: 'PointerLeave' }\r\n  | { type: 'MouseClick'; payload: number }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'PointerMove':\r\n      return {\r\n        ...state,\r\n        hoverValue: action.payload,\r\n        hoverIndex: action.index\r\n      }\r\n\r\n    case 'PointerLeave':\r\n      return {\r\n        ...state,\r\n        ratingValue: state.ratingValue,\r\n        hoverIndex: 0,\r\n        hoverValue: null\r\n      }\r\n\r\n    case 'MouseClick':\r\n      return {\r\n        ...state,\r\n        valueIndex: state.hoverIndex,\r\n        ratingValue: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {\r\n  useMemo,\r\n  useReducer,\r\n  useCallback,\r\n  Fragment,\r\n  ReactNode,\r\n  CSSProperties,\r\n  MouseEvent,\r\n  PointerEvent,\r\n  useEffect\r\n} from 'react'\r\nimport { StarIcon, StarIconProps } from './StarIcon'\r\nimport { reducer } from '../reducer'\r\nimport css from '../style.module.css'\r\n\r\nexport interface RatingProps extends StarIconProps {\r\n  /** Handles the returned rating value */\r\n  onClick?: (value: number, index: number, event?: MouseEvent<HTMLSpanElement>) => void\r\n  /** onPointerMove callback function with `hover`, `index` alongside `event` values passed */\r\n  onPointerMove?: (value: number, index: number, event: PointerEvent<HTMLSpanElement>) => void\r\n  /** onPointerEnter callback function */\r\n  onPointerEnter?: (event: PointerEvent<HTMLSpanElement>) => void\r\n  /** onPointerLeave callback function */\r\n  onPointerLeave?: (event: PointerEvent<HTMLSpanElement>) => void\r\n  /** Set initial value */\r\n  initialValue?: number\r\n  /** Number of the icons */\r\n  iconsCount?: number\r\n  /** Read only mode */\r\n  readonly?: boolean\r\n  /** Add a group of icons */\r\n  customIcons?: {\r\n    icon: ReactNode\r\n  }[]\r\n  /** RTL mode */\r\n  rtl?: boolean\r\n  /** Enable a fractional rate (half icon) */\r\n  allowFraction?: boolean\r\n  /** Enable / Disable hover effect on empty icons */\r\n  allowHover?: boolean\r\n  /** Enable / Disable hover effect on filled icons */\r\n  disableFillHover?: boolean\r\n  /** Enable / Disable transition effect on mouse hover */\r\n  transition?: boolean\r\n  /** Applied to the `main` span */\r\n  className?: string\r\n  /** Inline style applied to the `main` span */\r\n  style?: CSSProperties\r\n\r\n  /** Custom fill icon SVG */\r\n  fillIcon?: ReactNode | null\r\n  /** Filled icons color */\r\n  fillColor?: string\r\n  /** Array of string to add color range */\r\n  fillColorArray?: string[]\r\n  /** Inline style applied to `filled-icons` icon span  */\r\n  fillStyle?: CSSProperties\r\n  /** Filled icons `span` className */\r\n  fillClassName?: string\r\n\r\n  /** Custom empty icon SVG */\r\n  emptyIcon?: ReactNode | null\r\n  /** Empty icons color */\r\n  emptyColor?: string\r\n  /** Inline style applied to `empty-icons` span  */\r\n  emptyStyle?: CSSProperties\r\n  /** ٌُEmpty icons `span` className */\r\n  emptyClassName?: string\r\n\r\n  /** Show a tooltip with live values */\r\n  showTooltip?: boolean\r\n  /** Initial tooltip text if there is no rating value */\r\n  tooltipDefaultText?: string\r\n  /** Array of strings that will show inside the tooltip */\r\n  tooltipArray?: string[]\r\n  /** Inline style applied to the `tooltip` span */\r\n  tooltipStyle?: CSSProperties\r\n  /** Tooltip CSS className */\r\n  tooltipClassName?: string\r\n  /** Separator word in a title of a rating star `(1 out of 5)` */\r\n  titleSeparator?: string\r\n}\r\n\r\nexport function Rating({\r\n  onClick,\r\n  onPointerMove,\r\n  onPointerEnter,\r\n  onPointerLeave,\r\n  initialValue = 0,\r\n  iconsCount = 5,\r\n  size = 40,\r\n  readonly = false,\r\n  rtl = false,\r\n  customIcons = [],\r\n  allowFraction = false,\r\n  style,\r\n  className = 'react-simple-star-rating',\r\n  transition = false,\r\n\r\n  allowHover = true,\r\n  disableFillHover = false,\r\n\r\n  fillIcon = null,\r\n  fillColor = '#ffbc0b',\r\n  fillColorArray = [],\r\n  fillStyle,\r\n  fillClassName = 'filled-icons',\r\n\r\n  emptyIcon = null,\r\n  emptyColor = '#cccccc',\r\n  emptyStyle,\r\n  emptyClassName = 'empty-icons',\r\n\r\n  showTooltip = false,\r\n  tooltipDefaultText = 'Your Rate',\r\n  tooltipArray = [],\r\n  tooltipStyle,\r\n  tooltipClassName = 'react-simple-star-rating-tooltip',\r\n\r\n  SVGclassName = 'star-svg',\r\n  titleSeparator = 'out of',\r\n  SVGstyle,\r\n  SVGstorkeWidth = 0,\r\n  SVGstrokeColor = 'currentColor'\r\n}: RatingProps) {\r\n  const [{ ratingValue, hoverValue, hoverIndex, valueIndex }, dispatch] = useReducer(reducer, {\r\n    hoverIndex: 0,\r\n    valueIndex: 0,\r\n    ratingValue: 0,\r\n    hoverValue: null\r\n  })\r\n\r\n  /**\r\n   * Check for touch devices\r\n   * @returns `boolean`\r\n   */\r\n  const isTouchDevice = useMemo(() => 'ontouchstart' in window || navigator.maxTouchPoints > 0, [])\r\n  const totalIcons = useMemo(() => (allowFraction ? iconsCount * 2 : iconsCount), [allowFraction, iconsCount])\r\n\r\n  // Convert local rating value to precentage\r\n  const localRating = useMemo(() => {\r\n    if (initialValue > totalIcons) return 0\r\n\r\n    // Check for a decimal value\r\n    if (!allowFraction && Math.floor(initialValue) !== initialValue) {\r\n      return Math.ceil(initialValue) * 2 * 10\r\n    }\r\n\r\n    return Math.round((initialValue / iconsCount) * 100)\r\n  }, [allowFraction, initialValue, iconsCount, totalIcons])\r\n\r\n  const localRatingIndex = useMemo(() => (allowFraction ? initialValue * 2 - 1 : initialValue - 1) || 0, [\r\n    allowFraction,\r\n    initialValue\r\n  ])\r\n\r\n  const renderValue = useCallback((value: number) => (iconsCount % 2 !== 0 ? value / 2 / 10 : value / iconsCount), [\r\n    iconsCount\r\n  ])\r\n\r\n  const handlePointerMove = (event: PointerEvent<HTMLSpanElement>) => {\r\n    const { clientX, currentTarget } = event\r\n    // Get main span element position and width\r\n    const { left, right, width } = currentTarget.children[0].getBoundingClientRect()\r\n\r\n    // Handle RTL\r\n    const positionX = rtl ? right - clientX : clientX - left\r\n\r\n    // Get current pointer position while moves over the icons\r\n    let currentValue = totalIcons\r\n    const iconWidth = Math.round(width / totalIcons)\r\n\r\n    for (let i = 0; i <= totalIcons; i = i + 1) {\r\n      if (positionX <= iconWidth * i) {\r\n        if (i === 0 && positionX < iconWidth) currentValue = 0\r\n        else currentValue = i\r\n        break\r\n      }\r\n    }\r\n\r\n    const index = currentValue - 1\r\n\r\n    if (currentValue > 0) {\r\n      // Set value and index state\r\n      dispatch({ type: 'PointerMove', payload: (currentValue * 100) / totalIcons, index })\r\n\r\n      if (onPointerMove) {\r\n        if (hoverValue) onPointerMove(renderValue(hoverValue), index, event)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlePointerEnter = (event: PointerEvent<HTMLSpanElement>) => {\r\n    if (onPointerEnter) onPointerEnter(event)\r\n    // Enable only on touch devices\r\n    if (!isTouchDevice) return\r\n\r\n    handlePointerMove(event)\r\n  }\r\n\r\n  const handleClick = (event?: MouseEvent<HTMLSpanElement>) => {\r\n    if (hoverValue) {\r\n      dispatch({ type: 'MouseClick', payload: hoverValue })\r\n      if (onClick) onClick(renderValue(hoverValue), hoverIndex, event)\r\n    }\r\n  }\r\n\r\n  const handlePointerLeave = (event: PointerEvent<HTMLSpanElement>) => {\r\n    if (isTouchDevice) handleClick()\r\n\r\n    dispatch({ type: 'PointerLeave' })\r\n    if (onPointerLeave) onPointerLeave(event)\r\n  }\r\n\r\n  const valuePercentage = useMemo(() => {\r\n    if (allowHover) {\r\n      if (disableFillHover) {\r\n        const currentValue = (ratingValue && ratingValue) || localRating\r\n        return hoverValue && hoverValue > currentValue ? hoverValue : currentValue\r\n      }\r\n      return (hoverValue && hoverValue) || (ratingValue && ratingValue) || localRating\r\n    }\r\n\r\n    return (ratingValue && ratingValue) || localRating\r\n  }, [allowHover, disableFillHover, hoverValue, ratingValue, localRating])\r\n\r\n  useEffect(() => {\r\n    if (tooltipArray.length > totalIcons) {\r\n      console.error('tooltipArray Array length is bigger then Icons Count length.')\r\n    }\r\n  }, [tooltipArray.length, totalIcons])\r\n\r\n  // const handleTooltip = useCallback(\r\n  //   (value: number) => {\r\n  //     return tooltipArray.length > 0\r\n  //       ? tooltipArray[hoverIndex || valueIndex || localRatingIndex]\r\n  //       : renderValue(value) || 0\r\n  //   },\r\n  //   [tooltipArray, hoverIndex, valueIndex, localRatingIndex, renderValue]\r\n  // )\r\n\r\n  const ratingArray = useCallback(\r\n    (array: string[]) => {\r\n      return (\r\n        (hoverValue && array[hoverIndex]) ||\r\n        (ratingValue && array[valueIndex]) ||\r\n        (initialValue && array[localRatingIndex])\r\n      )\r\n    },\r\n    [hoverValue, hoverIndex, ratingValue, valueIndex, initialValue, localRatingIndex]\r\n  )\r\n\r\n  const ratingRenderValues = useMemo(() => {\r\n    return (\r\n      (hoverValue && renderValue(hoverValue)) ||\r\n      (ratingValue && renderValue(ratingValue)) ||\r\n      (initialValue && renderValue(localRating))\r\n    )\r\n  }, [hoverValue, renderValue, ratingValue, initialValue, localRating])\r\n\r\n  return (\r\n    <span className={css.starRatingWrap} style={{ direction: `${rtl ? 'rtl' : 'ltr'}` }}>\r\n      <span\r\n        className={`${css.simpleStarRating} ${className}`}\r\n        style={{\r\n          cursor: readonly ? '' : 'pointer',\r\n          ...style\r\n        }}\r\n        onPointerMove={readonly ? undefined : handlePointerMove}\r\n        onPointerEnter={readonly ? undefined : handlePointerEnter}\r\n        onPointerLeave={readonly ? undefined : handlePointerLeave}\r\n        onClick={readonly ? undefined : handleClick}\r\n        aria-hidden='true'\r\n      >\r\n        <span\r\n          className={`${css.emptyIcons} ${emptyClassName}`}\r\n          style={{\r\n            color: emptyColor,\r\n            ...emptyStyle\r\n          }}\r\n        >\r\n          {[...Array(iconsCount)].map((_, index) => (\r\n            <Fragment key={index}>\r\n              {customIcons[index]?.icon || emptyIcon || (\r\n                <StarIcon\r\n                  SVGclassName={SVGclassName}\r\n                  SVGstyle={SVGstyle}\r\n                  SVGstorkeWidth={SVGstorkeWidth}\r\n                  SVGstrokeColor={SVGstrokeColor}\r\n                  size={size}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </span>\r\n\r\n        <span\r\n          className={`${css.fillIcons} ${fillClassName}`}\r\n          style={{\r\n            [rtl ? 'right' : 'left']: 0,\r\n            color: ratingArray(fillColorArray) || fillColor,\r\n\r\n            transition: transition ? 'width .2s ease, color .2s ease' : '',\r\n            width: `${valuePercentage}%`,\r\n            ...fillStyle\r\n          }}\r\n          title={`${\r\n            (hoverValue && renderValue(hoverValue)) || renderValue(localRating)\r\n          } ${titleSeparator} ${iconsCount}`}\r\n        >\r\n          {[...Array(iconsCount)].map((_, index) => (\r\n            <Fragment key={index}>\r\n              {customIcons[index]?.icon || fillIcon || (\r\n                <StarIcon\r\n                  SVGclassName={SVGclassName}\r\n                  SVGstyle={SVGstyle}\r\n                  SVGstorkeWidth={SVGstorkeWidth}\r\n                  SVGstrokeColor={SVGstrokeColor}\r\n                  size={size}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </span>\r\n      </span>\r\n\r\n      {showTooltip && (\r\n        <span\r\n          className={`${css.tooltip} ${tooltipClassName}`}\r\n          style={{\r\n            [rtl ? 'marginRight' : 'marginLeft']: 20,\r\n            ...tooltipStyle\r\n          }}\r\n        >\r\n          {/* {tooltipArray.length > 0\r\n            ? (hoverValue && tooltipArray[hoverIndex]) ||\r\n              (ratingValue && tooltipArray[valueIndex]) ||\r\n              (initialValue && tooltipArray[localRatingIndex])\r\n            : (hoverValue && renderValue(hoverValue)) ||\r\n              (ratingValue && renderValue(ratingValue)) ||\r\n              renderValue(localRating) ||\r\n              tooltipDefaultText} */}\r\n\r\n          {(tooltipArray.length > 0 ? ratingArray(tooltipArray) : ratingRenderValues) || tooltipDefaultText}\r\n        </span>\r\n      )}\r\n    </span>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}